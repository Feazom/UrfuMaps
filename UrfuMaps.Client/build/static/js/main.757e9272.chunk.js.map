{"version":3,"sources":["reportWebVitals.ts","components/Map.tsx","components/NavMap.tsx","routes/Main.tsx","components/NavAddMap.tsx","components/UploadMap.tsx","components/PositionCards.tsx","routes/AddMap.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Map","floorNumber","setFloorNumber","buildingName","searchedCabinet","useState","isLoading","setIsLoading","floor","setFloor","useEffect","isNaN","parseInt","search","Number","a","fetch","env","API_DOMAIN","method","schemeResponse","json","ok","className","src","alt","imageLink","positions","map","postition","positionCoords","top","y","left","x","cabinet","style","NavMap","props","buildingList","setBuildingList","handleFloorChange","event","currentTarget","value","handleBuildingChange","setBuildingName","response","info","buildings","forEach","e","floorList","onChange","onLoad","Object","keys","placeholder","setSearchedCabinet","size","Main","to","NavAddMap","setEditedPosition","editedPosition","setCoords","coords","link","setPositions","NaN","setCabinet","description","setDescription","preventDefault","data","headers","Authorization","TOKEN","accept","body","JSON","stringify","onSubmit","type","id","htmlFor","readOnly","UploadMap","setLink","length","onClick","offset","getBoundingClientRect","clientX","width","toFixed","clientY","height","PositionCards","position","index","AddMap","rootElement","document","getElementById","ReactDOM","render","path","element"],"mappings":"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","file":"static/js/main.757e9272.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState, useEffect, CSSProperties } from 'react';\r\nimport InfoDTO from '../DTOs/InfoDTO';\r\nimport FloorDTO from '../DTOs/FloorDTO';\r\nimport env from 'react-dotenv';\r\nimport './Map.css';\r\n\r\ntype MapProps = {\r\n  floorNumber: number;\r\n  setFloorNumber: Function;\r\n  buildingName: string | null;\r\n  searchedCabinet: string;\r\n};\r\nconst Map = ({\r\n  floorNumber,\r\n  setFloorNumber,\r\n  buildingName,\r\n  searchedCabinet,\r\n}: MapProps) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [floor, setFloor] = useState<FloorDTO>();\r\n\r\n  useEffect(() => {\r\n    if (!isNaN(parseInt(searchedCabinet[searchedCabinet.search('-') + 1]))) {\r\n      if (searchedCabinet.search('-') !== -1) {\r\n        if (searchedCabinet[searchedCabinet.search('-') + 1] != null) {\r\n          setFloorNumber(\r\n            Number(searchedCabinet[searchedCabinet.search('-') + 1])\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }, [searchedCabinet]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (floorNumber != null && buildingName != null) {\r\n        const schemeResponse = await fetch(\r\n          `${env.API_DOMAIN}/map?floor=${floorNumber}&building=${buildingName}`,\r\n          {\r\n            method: 'GET',\r\n          }\r\n        );\r\n\r\n        setFloor(await schemeResponse.json());\r\n\r\n        if (schemeResponse.ok) {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    })();\r\n  }, [buildingName, floorNumber, searchedCabinet]);\r\n\r\n  return (\r\n    <div className=\"map-scheme\">\r\n      {isLoading ? (\r\n        <img src=\"loading-icon.svg\" className=\"loading-icon\" alt=\"\" />\r\n      ) : (\r\n        <div className=\"container\">\r\n          <img className=\"map-image\" src={floor?.imageLink} alt=\"floor map\" />\r\n          {floor?.positions.map((postition) => {\r\n            const positionCoords: CSSProperties = {\r\n              top: `${postition.y}%`,\r\n              left: `${postition.x}%`,\r\n            };\r\n            return postition.cabinet === searchedCabinet ? (\r\n              <img\r\n                className=\"map-marker\"\r\n                key={postition.cabinet}\r\n                src=\"marker-icon.svg\"\r\n                alt=\"mark\"\r\n                style={positionCoords}\r\n              />\r\n            ) : null;\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import { useState, useEffect, FormEvent } from 'react';\r\nimport InfoDTO from '../DTOs/InfoDTO';\r\nimport env from 'react-dotenv';\r\nimport './NavMap.css';\r\n\r\ntype MapProps = {\r\n  floor: number | null;\r\n  setFloorNumber: Function;\r\n  floorNumber: number;\r\n  buildingName: string;\r\n  setBuildingName: Function;\r\n  searchedCabinet: string;\r\n  setSearchedCabinet: Function;\r\n};\r\n\r\nconst NavMap = (props: MapProps) => {\r\n  const [buildingList, setBuildingList] = useState<Record<string, number[]>>(\r\n    {}\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(`${env.API_DOMAIN}/info`, {\r\n        method: 'GET',\r\n      });\r\n      const info: InfoDTO[] = await response.json();\r\n      const buildings: Record<string, number[]> = {};\r\n      info.forEach((e) => {\r\n        buildings[e.buildingName] = e.floorList;\r\n      });\r\n      setBuildingList(buildings);\r\n    })();\r\n  }, []);\r\n\r\n  function handleFloorChange(event: FormEvent<HTMLSelectElement>) {\r\n    props.setFloorNumber(event.currentTarget.value);\r\n  }\r\n\r\n  function handleBuildingChange(event: FormEvent<HTMLSelectElement>) {\r\n    props.setBuildingName(event.currentTarget.value);\r\n  }\r\n\r\n  function handleCabinetChange(event: FormEvent<HTMLInputElement>) {\r\n    props.setSearchedCabinet(event.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-header\">\r\n      <div className=\"floor-select\">\r\n        <span>Floor: </span>\r\n        <select\r\n          value={props.floorNumber}\r\n          onChange={handleFloorChange}\r\n          onLoad={handleFloorChange}\r\n        >\r\n          {buildingList[props.buildingName]?.map((floorNumber) => {\r\n            return <option key={floorNumber}>{floorNumber}</option>;\r\n          })}\r\n        </select>\r\n      </div>\r\n      <div className=\"building-select\">\r\n        <span>Building: </span>\r\n        <select onChange={handleBuildingChange} onLoad={handleBuildingChange}>\r\n          {Object.keys(buildingList)?.map((buildingName) => {\r\n            return <option key={buildingName}>{buildingName}</option>;\r\n          })}\r\n        </select>\r\n      </div>\r\n      <div className=\"cabinet-select\">\r\n        <span>Cabinet: </span>\r\n        <div>\r\n          <input\r\n            placeholder=\"Search...\"\r\n            value={props.searchedCabinet}\r\n            onChange={handleCabinetChange}\r\n            size={5}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavMap;\r\n","import { useState } from 'react';\r\nimport Map from '../components/Map';\r\nimport NavMap from '../components/NavMap';\r\nimport '../App.css';\r\nimport '../Link.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Main() {\r\n  const [floorNumber, setFloorNumber] = useState(1);\r\n  const [buildingName, setBuildingName] = useState('rtf');\r\n  const [searchedCabinet, setSearchedCabinet] = useState('');\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"link-add\">\r\n        <Link to=\"/add\" className=\"linkstyle\">Add</Link>\r\n      </div>\r\n      <div>\r\n        <NavMap\r\n          floor={floorNumber}\r\n          setFloorNumber={setFloorNumber}\r\n          floorNumber={floorNumber}\r\n          buildingName={buildingName}\r\n          setBuildingName={setBuildingName}\r\n          searchedCabinet={searchedCabinet}\r\n          setSearchedCabinet={setSearchedCabinet}\r\n        />\r\n        <Map\r\n          floorNumber={floorNumber}\r\n          setFloorNumber={setFloorNumber}\r\n          buildingName={buildingName}\r\n          searchedCabinet={searchedCabinet}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { FormEvent, useEffect, useState } from 'react';\r\nimport env from 'react-dotenv';\r\n// import { ImageListType } from 'react-images-uploading';\r\n// import { useLinkClickHandler } from 'react-router-dom';\r\nimport FloorDTO from '../DTOs/FloorDTO';\r\nimport PositionDTO from '../DTOs/PositionDTO';\r\nimport { Position } from '../types';\r\nimport './NavMap.css';\r\n\r\ntype AddMapProps = {\r\n  setEditedPosition: Function;\r\n  editedPosition: PositionDTO;\r\n  setCoords: Function;\r\n  coords: Position;\r\n  link: string;\r\n  positions: PositionDTO[];\r\n  setPositions: Function;\r\n};\r\n\r\nconst NavAddMap = ({\r\n  setEditedPosition,\r\n  editedPosition,\r\n  setCoords,\r\n  coords,\r\n  link,\r\n  positions,\r\n  setPositions,\r\n}: AddMapProps) => {\r\n  const [floorNumber, setFloorNumber] = useState(NaN);\r\n  const [buildingName, setBuildingName] = useState('');\r\n  const [cabinet, setCabinet] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  function handleFloorChange(event: FormEvent<HTMLInputElement>) {\r\n    setFloorNumber(parseInt(event.currentTarget.value));\r\n  }\r\n  function handleBuildingChange(event: FormEvent<HTMLInputElement>) {\r\n    setBuildingName(event.currentTarget.value);\r\n  }\r\n  function handleCabinetChange(event: FormEvent<HTMLInputElement>) {\r\n    setCabinet(event.currentTarget.value);\r\n  }\r\n  function handleDescriptionChange(event: FormEvent<HTMLInputElement>) {\r\n    setDescription(event.currentTarget.value);\r\n  }\r\n\r\n  function submitPosition(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    setPositions([...positions, editedPosition]);\r\n    setCoords({ x: NaN, y: NaN });\r\n    setCabinet('');\r\n    setDescription('');\r\n  }\r\n\r\n  async function submitMap(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n\r\n    const data: FloorDTO = {\r\n      floorNumber,\r\n      buildingName,\r\n      imageLink: link,\r\n      positions,\r\n    };\r\n    await fetch(`${env.API_DOMAIN}/map`, {\r\n      headers: {\r\n        Authorization: env.TOKEN,\r\n        accept: 'text/plain',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setEditedPosition({\r\n      cabinet,\r\n      description,\r\n      x: coords?.x,\r\n      y: coords?.y,\r\n    });\r\n  }, [cabinet, description, coords, setEditedPosition]);\r\n\r\n  return (\r\n    <div className=\"app-header-edit\">\r\n      <form className=\"floor-edit\" onSubmit={submitMap}>\r\n        <label>Floor:</label>\r\n        <input onChange={handleFloorChange} size={5} />\r\n        <label>Building:</label>\r\n        <input onChange={handleBuildingChange} size={5} />\r\n        <input type=\"submit\" value=\"Upload map\" />\r\n      </form>\r\n\r\n      <form\r\n        id=\"cabinet-form\"\r\n        className=\"cabinet-edit\"\r\n        onSubmit={submitPosition}\r\n      >\r\n        <div>\r\n          <label htmlFor=\"cabinet\">Cabinet:</label>\r\n          <input id=\"cabinet\" size={5} onChange={handleCabinetChange} />\r\n          <label htmlFor=\"description\">Description</label>\r\n          <input id=\"description\" size={5} onChange={handleDescriptionChange} />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"x\">X:</label>\r\n          <input readOnly id=\"x\" size={5} value={coords.x} />\r\n          <label htmlFor=\"y\">Y:</label>\r\n          <input readOnly id=\"y\" size={5} value={coords.y} />\r\n          <input className=\"edit-button\" type=\"submit\" value=\"Add\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavAddMap;\r\n","import {\r\n  MouseEvent,\r\n  FormEvent,\r\n} from 'react';\r\nimport './UploadMap.css';\r\n\r\ntype UploadMapProps = {\r\n  setCoords: Function;\r\n  link: string;\r\n  setLink: Function;\r\n};\r\n\r\nconst UploadMap = ({ setCoords, link, setLink }: UploadMapProps) => {\r\n  // async function handleImage(img: ImageListType) {\r\n  //   setImages(img);\r\n  // }\r\n\r\n  function handleLinkChange(event: FormEvent<HTMLInputElement>) {\r\n    setLink(event.currentTarget.value);\r\n  }\r\n\r\n  function handleClick(event: MouseEvent<HTMLImageElement>) {\r\n    const offset = event.currentTarget.getBoundingClientRect();\r\n    setCoords({\r\n      x: (((event.clientX - offset.left) * 100) / offset.width).toFixed(4),\r\n      y: (((event.clientY - offset.top) * 100) / offset.height).toFixed(4),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"link-insert\">\r\n        <label>Link: </label>\r\n        <input value={link} onChange={handleLinkChange} />\r\n      </div>\r\n      <br />\r\n      {link.length !== 0 ? (\r\n        <img\r\n          className=\"edited-map-image\"\r\n          alt=\"\"\r\n          src={link}\r\n          onClick={handleClick}\r\n        />\r\n      ) : null}\r\n      {/* <ImageUploading value={images} onChange={handleImage} maxNumber={1}>\r\n        {({ imageList, onImageUpload, onImageUpdate, onImageRemove }) => (\r\n          <div className=\"upload-wrapper\">\r\n            <button onClick={onImageUpload}>Upload Image</button>\r\n            <br />\r\n            {imageList.map((image, index) => (\r\n              <div key={index} className=\"image-item\">\r\n                <img src={image.dataURL} alt=\"\" onClick={handleClick} />\r\n                <div className=\"image-item-wrapper\">\r\n                  <button onClick={() => onImageUpdate(index)}>Update</button>\r\n                  <button onClick={() => onImageRemove(index)}>Remove</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </ImageUploading> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadMap;\r\n","import PositionDTO from '../DTOs/PositionDTO';\r\nimport '../components/PositionCards.css';\r\n\r\ntype PositionCardsProps = {\r\n  positions: PositionDTO[];\r\n};\r\n\r\nconst PositionCards = ({ positions }: PositionCardsProps) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {positions.map((position, index) => {\r\n        return (\r\n          <div key={index} className=\"card\">\r\n            <label>Cabinet: {position.cabinet}</label>\r\n            <label>Description: {position.description}</label>\r\n            <label>X: {position.x}</label>\r\n            <label>Y: {position.y}</label>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PositionCards;\r\n","import { useState } from 'react';\r\nimport NavAddMap from '../components/NavAddMap';\r\nimport PositionDTO from '../DTOs/PositionDTO';\r\nimport UploadMap from '../components/UploadMap';\r\nimport { Position } from '../types';\r\nimport PositionCards from '../components/PositionCards';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddMap = () => {\r\n  const [editedPosition, setEditedPosition] = useState({} as PositionDTO);\r\n  const [coords, setCoords] = useState<Position>({ x: NaN, y: NaN });\r\n  // const [images, setImages] = useState<ImageListType>([]);\r\n  const [link, setLink] = useState('');\r\n  const [positions, setPositions] = useState<PositionDTO[]>([]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"link-add\">\r\n        <Link className=\"linkstyle\" to=\"/\">Home</Link>\r\n      </div>\r\n      {/* <Login /> */}\r\n      <NavAddMap\r\n        editedPosition={editedPosition}\r\n        setEditedPosition={setEditedPosition}\r\n        coords={coords}\r\n        setCoords={setCoords}\r\n        link={link}\r\n        positions={positions}\r\n        setPositions={setPositions}\r\n      />\r\n      <UploadMap setCoords={setCoords} link={link} setLink={setLink} />\r\n      <PositionCards positions={positions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMap;\r\n","import './index.css';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Routes, Route, HashRouter } from 'react-router-dom';\r\nimport Main from './routes/Main';\r\nimport AddMap from './routes/AddMap';\r\nimport React from 'react';\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Routes>\r\n      <Route path=\"/\" element={<Main />} />\r\n      <Route path=\"/add\" element={<AddMap />} />\r\n    </Routes>\r\n  </HashRouter>,\r\n  rootElement\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["reportWebVitals.ts","components/Map.tsx","components/NavMap.tsx","routes/Main.tsx","components/NavAddMap.tsx","components/UploadMap.tsx","components/PositionCards.tsx","routes/AddMap.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Map","floorNumber","buildingName","searchedCabinet","useState","isLoading","setIsLoading","floor","setFloor","useEffect","a","fetch","env","API_DOMAIN","method","response","json","ok","className","src","alt","imageLink","positions","map","postition","positionCoords","top","y","left","x","cabinet","style","NavMap","props","buildingList","setBuildingList","handleFloorChange","event","setFloorNumber","currentTarget","value","handleBuildingChange","setBuildingName","info","buildings","forEach","e","floorList","onChange","onLoad","Object","keys","setSearchedCabinet","size","type","Main","to","NavAddMap","setEditedPosition","editedPosition","setCoords","coords","link","setPositions","NaN","setCabinet","description","setDescription","preventDefault","data","headers","Authorization","TOKEN","accept","body","JSON","stringify","onSubmit","parseInt","id","htmlFor","readOnly","UploadMap","setLink","length","onClick","offset","getBoundingClientRect","clientX","width","toFixed","clientY","height","PositionCards","position","index","AddMap","rootElement","document","getElementById","ReactDOM","render","path","element"],"mappings":"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","file":"static/js/main.3383adc0.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState, useEffect, CSSProperties } from 'react';\r\nimport FloorDTO from '../DTOs/FloorDTO';\r\nimport env from 'react-dotenv';\r\nimport './Map.css';\r\n\r\ntype MapProps = {\r\n  floorNumber: number | null;\r\n  buildingName: string | null;\r\n  searchedCabinet: string;\r\n};\r\nconst Map = ({ floorNumber, buildingName, searchedCabinet }: MapProps) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [floor, setFloor] = useState<FloorDTO>();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (floorNumber != null && buildingName != null) {\r\n        const response = await fetch(\r\n          `${env.API_DOMAIN}/map?floor=${floorNumber}&building=${buildingName}`,\r\n          {\r\n            method: 'GET',\r\n          }\r\n        );\r\n\r\n        setFloor(await response.json());\r\n\r\n        if (response.ok) {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    })();\r\n  }, [buildingName, floorNumber]);\r\n\r\n  return (\r\n    <div className=\"map-scheme\">\r\n      {isLoading ? (\r\n        <img src=\"loading-icon.svg\" className=\"loading-icon\" alt=\"\" />\r\n      ) : (\r\n        <div className=\"container\">\r\n          <img className=\"map-image\" src={floor?.imageLink} alt=\"floor map\" />\r\n          {floor?.positions.map((postition) => {\r\n            const positionCoords: CSSProperties = {\r\n              top: `${postition.y}%`,\r\n              left: `${postition.x}%`,\r\n            };\r\n            return postition.cabinet === searchedCabinet ? (\r\n              <img\r\n                className=\"map-marker\"\r\n                key={postition.cabinet}\r\n                src=\"marker-icon.svg\"\r\n                alt=\"mark\"\r\n                style={positionCoords}\r\n              />\r\n            ) : null;\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import { useState, useEffect, FormEvent } from 'react';\r\nimport InfoDTO from '../DTOs/InfoDTO';\r\nimport env from 'react-dotenv';\r\nimport './NavMap.css';\r\n\r\ntype MapProps = {\r\n    floor: number | null;\r\n    setFloorNumber: Function;\r\n    buildingName: string;\r\n    setBuildingName: Function;\r\n    searchedCabinet: string;\r\n    setSearchedCabinet: Function;\r\n};\r\n\r\nconst NavMap = (props: MapProps) => {\r\n    const [buildingList, setBuildingList] = useState<Record<string, number[]>>(\r\n        {}\r\n    );\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetch(`${env.API_DOMAIN}/info`, {\r\n                method: 'GET',\r\n            });\r\n            const info: InfoDTO[] = await response.json();\r\n            const buildings: Record<string, number[]> = {};\r\n            info.forEach((e) => {\r\n                buildings[e.buildingName] = e.floorList;\r\n            });\r\n            setBuildingList(buildings);\r\n        })();\r\n    }, []);\r\n\r\n    function handleFloorChange(event: FormEvent<HTMLSelectElement>) {\r\n        props.setFloorNumber(event.currentTarget.value);\r\n    }\r\n\r\n    function handleBuildingChange(event: FormEvent<HTMLSelectElement>) {\r\n        props.setBuildingName(event.currentTarget.value);\r\n    }\r\n\r\n    function handleCabinetChange(event: FormEvent<HTMLInputElement>) {\r\n        props.setSearchedCabinet(event.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"app-header\">\r\n            <div className=\"floor-select\">\r\n                <span>Floor: </span>\r\n                <select onChange={handleFloorChange} onLoad={handleFloorChange}>\r\n                    {buildingList[props.buildingName]?.map((floorNumber) => {\r\n                        return <option key={floorNumber}>{floorNumber}</option>;\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div className=\"building-select\">\r\n                <span>Building: </span>\r\n                <select\r\n                    onChange={handleBuildingChange}\r\n                    onLoad={handleBuildingChange}\r\n                >\r\n                    {Object.keys(buildingList)?.map((buildingName) => {\r\n                        return (\r\n                            <option key={buildingName}>{buildingName}</option>\r\n                        );\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div className=\"cabinet-select\">\r\n                <span>Cabinet: </span>\r\n                <div>\r\n                    <input\r\n                        value={props.searchedCabinet}\r\n                        onChange={handleCabinetChange}\r\n                        size={5}\r\n                    />\r\n                    <button className=\"button\" type=\"submit\" value=\"Search\">\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavMap;\r\n","import { useState } from 'react';\r\nimport Map from '../components/Map';\r\nimport NavMap from '../components/NavMap';\r\nimport '../App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Main() {\r\n  const [floorNumber, setFloorNumber] = useState(1);\r\n  const [buildingName, setBuildingName] = useState('rtf');\r\n  const [searchedCabinet, setSearchedCabinet] = useState('');\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Link to=\"/add\">add</Link>\r\n      <NavMap\r\n        floor={floorNumber}\r\n        setFloorNumber={setFloorNumber}\r\n        buildingName={buildingName}\r\n        setBuildingName={setBuildingName}\r\n        searchedCabinet={searchedCabinet}\r\n        setSearchedCabinet={setSearchedCabinet}\r\n      />\r\n      <Map\r\n        floorNumber={floorNumber}\r\n        buildingName={buildingName}\r\n        searchedCabinet={searchedCabinet}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { FormEvent, useEffect, useState } from 'react';\r\nimport env from 'react-dotenv';\r\n// import { ImageListType } from 'react-images-uploading';\r\n// import { useLinkClickHandler } from 'react-router-dom';\r\nimport FloorDTO from '../DTOs/FloorDTO';\r\nimport PositionDTO from '../DTOs/PositionDTO';\r\nimport { Position } from '../types';\r\nimport './NavMap.css';\r\n\r\ntype AddMapProps = {\r\n  setEditedPosition: Function;\r\n  editedPosition: PositionDTO;\r\n  setCoords: Function;\r\n  coords: Position;\r\n  link: string;\r\n  positions: PositionDTO[];\r\n  setPositions: Function;\r\n};\r\n\r\nconst NavAddMap = ({\r\n  setEditedPosition,\r\n  editedPosition,\r\n  setCoords,\r\n  coords,\r\n  link,\r\n  positions,\r\n  setPositions,\r\n}: AddMapProps) => {\r\n  const [floorNumber, setFloorNumber] = useState(NaN);\r\n  const [buildingName, setBuildingName] = useState('');\r\n  const [cabinet, setCabinet] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  function handleFloorChange(event: FormEvent<HTMLInputElement>) {\r\n    setFloorNumber(parseInt(event.currentTarget.value));\r\n  }\r\n  function handleBuildingChange(event: FormEvent<HTMLInputElement>) {\r\n    setBuildingName(event.currentTarget.value);\r\n  }\r\n  function handleCabinetChange(event: FormEvent<HTMLInputElement>) {\r\n    setCabinet(event.currentTarget.value);\r\n  }\r\n  function handleDescriptionChange(event: FormEvent<HTMLInputElement>) {\r\n    setDescription(event.currentTarget.value);\r\n  }\r\n\r\n  function submitPosition(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    setPositions([...positions, editedPosition]);\r\n    setCoords({ x: NaN, y: NaN });\r\n    setCabinet('');\r\n    setDescription('');\r\n  }\r\n\r\n  async function submitMap(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n\r\n    const data: FloorDTO = {\r\n      floorNumber,\r\n      buildingName,\r\n      imageLink: link,\r\n      positions,\r\n    };\r\n    await fetch(`${env.API_DOMAIN}/map`, {\r\n      headers: {\r\n        Authorization: env.TOKEN,\r\n        accept: 'text/plain',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setEditedPosition({\r\n      cabinet,\r\n      description,\r\n      x: coords?.x,\r\n      y: coords?.y,\r\n    });\r\n  }, [cabinet, description, coords, setEditedPosition]);\r\n\r\n  return (\r\n    <div className=\"app-header-edit\">\r\n      <form className=\"floor-edit\" onSubmit={submitMap}>\r\n        <label>Floor:</label>\r\n        <input onChange={handleFloorChange} size={5} />\r\n        <label>Building:</label>\r\n        <input onChange={handleBuildingChange} size={5} />\r\n        <input type=\"submit\" value=\"Upload map\" />\r\n      </form>\r\n\r\n      <form\r\n        id=\"cabinet-form\"\r\n        className=\"cabinet-edit\"\r\n        onSubmit={submitPosition}\r\n      >\r\n        <div>\r\n          <label htmlFor=\"cabinet\">Cabinet:</label>\r\n          <input id=\"cabinet\" size={5} onChange={handleCabinetChange} />\r\n          <label htmlFor=\"description\">Descrpiption</label>\r\n          <input id=\"description\" size={5} onChange={handleDescriptionChange} />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"x\">X:</label>\r\n          <input readOnly id=\"x\" size={5} value={coords.x} />\r\n          <label htmlFor=\"y\">Y:</label>\r\n          <input readOnly id=\"y\" size={5} value={coords.y} />\r\n          <input className=\"edit-button\" type=\"submit\" value=\"Add\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavAddMap;\r\n","import {\r\n  MouseEvent,\r\n  FormEvent,\r\n} from 'react';\r\nimport './UploadMap.css';\r\n\r\ntype UploadMapProps = {\r\n  setCoords: Function;\r\n  link: string;\r\n  setLink: Function;\r\n};\r\n\r\nconst UploadMap = ({ setCoords, link, setLink }: UploadMapProps) => {\r\n  // async function handleImage(img: ImageListType) {\r\n  //   setImages(img);\r\n  // }\r\n\r\n  function handleLinkChange(event: FormEvent<HTMLInputElement>) {\r\n    setLink(event.currentTarget.value);\r\n  }\r\n\r\n  function handleClick(event: MouseEvent<HTMLImageElement>) {\r\n    const offset = event.currentTarget.getBoundingClientRect();\r\n    setCoords({\r\n      x: (((event.clientX - offset.left) * 100) / offset.width).toFixed(4),\r\n      y: (((event.clientY - offset.top) * 100) / offset.height).toFixed(4),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <label>Link: </label>\r\n      <input value={link} onChange={handleLinkChange} />\r\n      <br />\r\n      {link.length !== 0 ? (\r\n        <img\r\n          className=\"edited-map-image\"\r\n          alt=\"\"\r\n          src={link}\r\n          onClick={handleClick}\r\n        />\r\n      ) : null}\r\n      {/* <ImageUploading value={images} onChange={handleImage} maxNumber={1}>\r\n        {({ imageList, onImageUpload, onImageUpdate, onImageRemove }) => (\r\n          <div className=\"upload-wrapper\">\r\n            <button onClick={onImageUpload}>Upload Image</button>\r\n            <br />\r\n            {imageList.map((image, index) => (\r\n              <div key={index} className=\"image-item\">\r\n                <img src={image.dataURL} alt=\"\" onClick={handleClick} />\r\n                <div className=\"image-item-wrapper\">\r\n                  <button onClick={() => onImageUpdate(index)}>Update</button>\r\n                  <button onClick={() => onImageRemove(index)}>Remove</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </ImageUploading> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadMap;\r\n","import PositionDTO from '../DTOs/PositionDTO';\r\nimport '../components/PositionCards.css';\r\n\r\ntype PositionCardsProps = {\r\n  positions: PositionDTO[];\r\n};\r\n\r\nconst PositionCards = ({ positions }: PositionCardsProps) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {positions.map((position, index) => {\r\n        return (\r\n          <div key={index} className=\"card\">\r\n            <label>Cabinet: {position.cabinet}</label>\r\n            <label>Description: {position.description}</label>\r\n            <label>X: {position.x}</label>\r\n            <label>Y: {position.y}</label>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PositionCards;\r\n","import { useState } from 'react';\r\nimport NavAddMap from '../components/NavAddMap';\r\nimport PositionDTO from '../DTOs/PositionDTO';\r\nimport UploadMap from '../components/UploadMap';\r\nimport { Position } from '../types';\r\nimport PositionCards from '../components/PositionCards';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddMap = () => {\r\n  const [editedPosition, setEditedPosition] = useState({} as PositionDTO);\r\n  const [coords, setCoords] = useState<Position>({ x: NaN, y: NaN });\r\n  // const [images, setImages] = useState<ImageListType>([]);\r\n  const [link, setLink] = useState('');\r\n  const [positions, setPositions] = useState<PositionDTO[]>([]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Link to=\"/\">home</Link>\r\n      {/* <Login /> */}\r\n      <NavAddMap\r\n        editedPosition={editedPosition}\r\n        setEditedPosition={setEditedPosition}\r\n        coords={coords}\r\n        setCoords={setCoords}\r\n        link={link}\r\n        positions={positions}\r\n        setPositions={setPositions}\r\n      />\r\n      <UploadMap setCoords={setCoords} link={link} setLink={setLink} />\r\n      <PositionCards positions={positions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMap;\r\n","import './index.css';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { /*BrowserRouter,*/ Routes, Route, HashRouter } from 'react-router-dom';\nimport Main from './routes/Main';\nimport AddMap from './routes/AddMap';\nimport React from 'react';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<Main />} />\n      <Route path=\"/add\" element={<AddMap />} />\n    </Routes>\n  </HashRouter>,\n  rootElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}